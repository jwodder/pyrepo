name: Test

on:
  pull_request:
  push:
    branches:
      - {{default_branch}}
  schedule:
    - cron: '0 6 * * *'

concurrency:
  group: ${{ '{{' }} github.workflow }}-${{ '{{' }} github.event_name }}-${{ '{{' }} github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          {% for v in python_versions %}
          - '{{v}}'
          {% endfor %}
          {% if supports_pypy %}
          {% for pyv in python_versions|pypy_supported %}
          - 'pypy-{{pyv}}'
          {% endfor %}
          {% endif %}
        toxenv: [py]
        {% if extra_testenvs %}
        include:
        {% for testenv, pyver in extra_testenvs.items()|sort %}
          - python-version: '{{pyver}}'
            toxenv: {{testenv}}
        {% endfor %}
        {% endif %}
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ '{{' }} matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          {% if has_doctests %}
          python -m pip install --upgrade --upgrade-strategy=eager coverage tox
          {% else %}
          python -m pip install --upgrade --upgrade-strategy=eager tox
          {% endif %}

      {% if has_doctests %}
      - name: Run tests
        run: tox -e ${{ '{{' }} matrix.toxenv }}

      - name: Generate XML coverage report
        if: matrix.toxenv == 'py'
        run: coverage xml
      {% else %}
      - name: Run tests with coverage
        if: matrix.toxenv == 'py'
        run: tox -e py -- --cov-report=xml

      - name: Run generic tests
        if: matrix.toxenv != 'py'
        run: tox -e ${{ '{{' }} matrix.toxenv }}
      {% endif %}

      - name: Upload coverage to Codecov
        if: matrix.toxenv == 'py'
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
          token: ${{ '{{' }} secrets.CODECOV_TOKEN }}
          name: ${{ '{{' }} matrix.python-version }}

# vim:set et sts=2:
